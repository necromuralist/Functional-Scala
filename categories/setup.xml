<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Functional Scala (Posts about setup)</title><link>https://necromuralist.github.io/Functional-Scala/</link><description></description><atom:link href="https://necromuralist.github.io/Functional-Scala/categories/setup.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2019 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Tue, 10 Dec 2019 00:52:16 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>OB-Ipython With Scala (a test)</title><link>https://necromuralist.github.io/Functional-Scala/posts/exploring/ob-ipython-with-scala-a-test/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Functional-Scala/posts/exploring/ob-ipython-with-scala-a-test/#org4d2e75d"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Functional-Scala/posts/exploring/ob-ipython-with-scala-a-test/#org85d9e7d"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Functional-Scala/posts/exploring/ob-ipython-with-scala-a-test/#org4a5df70"&gt;The Traditional Ipython Block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Functional-Scala/posts/exploring/ob-ipython-with-scala-a-test/#orge6406fb"&gt;The Jupyter Block&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Functional-Scala/posts/exploring/ob-ipython-with-scala-a-test/#org3c91346"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4d2e75d" class="outline-2"&gt;
&lt;h2 id="org4d2e75d"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4d2e75d"&gt;
&lt;p&gt;
This is a test of using &lt;a href="https://github.com/gregsexton/ob-ipython"&gt;ob-ipython&lt;/a&gt; with the scala kernel (provided by &lt;a href="https://almond.sh/"&gt;Almond&lt;/a&gt;, so that has to be installed first).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org85d9e7d" class="outline-2"&gt;
&lt;h2 id="org85d9e7d"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org85d9e7d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4a5df70" class="outline-3"&gt;
&lt;h3 id="org4a5df70"&gt;The Traditional Ipython Block&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4a5df70"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;println("testing")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
testing

&lt;/pre&gt;

&lt;p&gt;
Surprisingly, that worked (although it's very slow).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge6406fb" class="outline-3"&gt;
&lt;h3 id="orge6406fb"&gt;The Jupyter Block&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge6406fb"&gt;
&lt;p&gt;
According to the documentation for &lt;code&gt;ob-ipython&lt;/code&gt; it's being transitioned over to using &lt;code&gt;jupyter&lt;/code&gt; instead of &lt;code&gt;ipython&lt;/code&gt; so there's a new type of source-block to use.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;val x = 5
println(s"x is $x")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
x is 5

&lt;/pre&gt;

&lt;p&gt;
This produces the error &lt;code&gt;No org-babel-execute function for jupyter-scala!&lt;/code&gt; unless you remove &lt;code&gt;(jupyter . t)&lt;/code&gt; from the org-babel setup block in &lt;code&gt;init.el&lt;/code&gt;. It looks like it won't co-exist with &lt;a href="https://github.com/dzop/emacs-jupyter"&gt;emacs-jupyter&lt;/a&gt; I'll have to decide if that project has improved enough to start using it again. I just noticed that ob-ipython hasn't been updated in a couple of years, so this "experimental" support might never be more than that. Still, it's good to know that it works.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3c91346" class="outline-2"&gt;
&lt;h2 id="org3c91346"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3c91346"&gt;
&lt;p&gt;
Not very exciting, in what it does (other than work). I'll stick with ob-ipython for now and see if &lt;code&gt;emacs-jupyter&lt;/code&gt; works as well - in my previous experiment with it it didn't seem to be quite ready.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ob-ipython</category><category>scala</category><category>setup</category><guid>https://necromuralist.github.io/Functional-Scala/posts/exploring/ob-ipython-with-scala-a-test/</guid><pubDate>Mon, 09 Dec 2019 20:51:18 GMT</pubDate></item></channel></rss>